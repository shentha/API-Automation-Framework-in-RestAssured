<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="51" passed="48" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-02-22T17:17:20Z" name="Suite1" finished-at="2022-02-22T17:17:46Z" duration-ms="25726">
    <groups>
    </groups>
    <test started-at="2022-02-22T17:17:20Z" name="PostProduction LMS API Automation" finished-at="2022-02-22T17:17:39Z" duration-ms="18839">
      <class name="lmsapiautomation.LMSPut">
        <test-method signature="putPositiveCases(java.lang.String, java.util.HashMap, java.lang.Integer, java.lang.Integer)[pri:0, instance:lmsapiautomation.LMSPut@212b5695]" started-at="2022-02-22T12:17:32Z" name="putPositiveCases" data-provider="putPositiveProgramIds" finished-at="2022-02-22T12:17:33Z" duration-ms="619" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Update Existing Record]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{programDescription=API Automation Testing, programName=Automation Testing, online=FALSE, programId=9900}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- putPositiveCases -->
        <test-method signature="putPositiveCases(java.lang.String, java.util.HashMap, java.lang.Integer, java.lang.Integer)[pri:0, instance:lmsapiautomation.LMSPut@212b5695]" started-at="2022-02-22T12:17:33Z" name="putPositiveCases" data-provider="putPositiveProgramIds" finished-at="2022-02-22T12:17:33Z" duration-ms="448" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Update Non Existing ProgramId]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{programDescription=Testing, programName=Testing, online=TRUE, programId=20000}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- putPositiveCases -->
        <test-method signature="putPositiveCases(java.lang.String, java.util.HashMap, java.lang.Integer, java.lang.Integer)[pri:0, instance:lmsapiautomation.LMSPut@212b5695]" started-at="2022-02-22T12:17:33Z" name="putPositiveCases" data-provider="putPositiveProgramIds" finished-at="2022-02-22T12:17:34Z" duration-ms="489" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Update Program Desc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{programDescription=Selenium CucumberBDD, programName=Testing, online=TRUE, programId=5850}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- putPositiveCases -->
        <test-method signature="putPositiveCases(java.lang.String, java.util.HashMap, java.lang.Integer, java.lang.Integer)[pri:0, instance:lmsapiautomation.LMSPut@212b5695]" started-at="2022-02-22T12:17:34Z" name="putPositiveCases" data-provider="putPositiveProgramIds" finished-at="2022-02-22T12:17:34Z" duration-ms="444" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Update Program Desc with No or AlphaNum]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{programDescription=800, programName=Testing, online=FALSE, programId=5025}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- putPositiveCases -->
        <test-method signature="putPositiveCases(java.lang.String, java.util.HashMap, java.lang.Integer, java.lang.Integer)[pri:0, instance:lmsapiautomation.LMSPut@212b5695]" started-at="2022-02-22T12:17:34Z" name="putPositiveCases" data-provider="putPositiveProgramIds" finished-at="2022-02-22T12:17:35Z" duration-ms="474" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Program Name is given Spec Char]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{programDescription=API Testing, programName=&%Test, online=TRUE, programId=1849}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- putPositiveCases -->
        <test-method signature="putPositiveCases(java.lang.String, java.util.HashMap, java.lang.Integer, java.lang.Integer)[pri:0, instance:lmsapiautomation.LMSPut@212b5695]" started-at="2022-02-22T12:17:35Z" name="putPositiveCases" data-provider="putPositiveProgramIds" finished-at="2022-02-22T12:17:35Z" duration-ms="449" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Program Name is Decimal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{programDescription=Selenium, programName=0.0009, online=FALSE, programId=3730}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- putPositiveCases -->
        <test-method signature="putPositiveCases(java.lang.String, java.util.HashMap, java.lang.Integer, java.lang.Integer)[pri:0, instance:lmsapiautomation.LMSPut@212b5695]" started-at="2022-02-22T12:17:35Z" name="putPositiveCases" data-provider="putPositiveProgramIds" finished-at="2022-02-22T12:17:36Z" duration-ms="429" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NonExisting ProgramId]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{programDescription=AutomationTesting, programName=Testing, online=TRUE, programId=10000}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- putPositiveCases -->
        <test-method signature="putNegativeCases(java.lang.String, java.util.HashMap, java.lang.Integer, java.lang.Integer)[pri:0, instance:lmsapiautomation.LMSPut@212b5695]" started-at="2022-02-22T12:17:36Z" name="putNegativeCases" data-provider="putNegativeProgramIds" finished-at="2022-02-22T12:17:36Z" duration-ms="338" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ProgramId Null]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{programDescription=Selenium CucumberBDD, programName=UI Testing, online=TRUE, programId=}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[405]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- putNegativeCases -->
        <test-method signature="putNegativeCases(java.lang.String, java.util.HashMap, java.lang.Integer, java.lang.Integer)[pri:0, instance:lmsapiautomation.LMSPut@212b5695]" started-at="2022-02-22T12:17:36Z" name="putNegativeCases" data-provider="putNegativeProgramIds" finished-at="2022-02-22T12:17:37Z" duration-ms="371" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ProgramId AlphaNumeric]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{programDescription=RestAssured Postman, programName=API Testing, online=FALSE, programId=90kl}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- putNegativeCases -->
      </class> <!-- lmsapiautomation.LMSPut -->
      <class name="lmsapiautomation.LMSDelete">
        <test-method signature="deletePositiveCases(java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer)[pri:0, instance:lmsapiautomation.LMSDelete@4d02f94e]" started-at="2022-02-22T12:17:37Z" name="deletePositiveCases" data-provider="deletePositiveProgramIds" finished-at="2022-02-22T12:17:37Z" duration-ms="390" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Delete Existing ProgramId]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[8563]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [8563] but found [500]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [8563] but found [500]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:370)
	at org.testng.Assert.assertEquals(Assert.java:380)
	at lmsapiautomation.LMSDelete.deletePositiveCases(LMSDelete.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deletePositiveCases -->
        <test-method signature="deleteProgramNegativeCases(java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer)[pri:0, instance:lmsapiautomation.LMSDelete@4d02f94e]" started-at="2022-02-22T12:17:37Z" name="deleteProgramNegativeCases" data-provider="deleteNegativeProgramIds" finished-at="2022-02-22T12:17:38Z" duration-ms="380" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Delete Non Existing ProgramId]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9989]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[500]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteProgramNegativeCases -->
        <test-method signature="deleteProgramNegativeCases(java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer)[pri:0, instance:lmsapiautomation.LMSDelete@4d02f94e]" started-at="2022-02-22T12:17:38Z" name="deleteProgramNegativeCases" data-provider="deleteNegativeProgramIds" finished-at="2022-02-22T12:17:38Z" duration-ms="392" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ProgramId Null]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[405]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteProgramNegativeCases -->
        <test-method signature="deleteProgramNegativeCases(java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer)[pri:0, instance:lmsapiautomation.LMSDelete@4d02f94e]" started-at="2022-02-22T12:17:38Z" name="deleteProgramNegativeCases" data-provider="deleteNegativeProgramIds" finished-at="2022-02-22T12:17:39Z" duration-ms="446" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ProgramId AlphaNum]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[def89]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteProgramNegativeCases -->
      </class> <!-- lmsapiautomation.LMSDelete -->
      <class name="lmsapiautomation.LMSSchemaValidation">
        <test-method signature="validateSchema()[pri:0, instance:lmsapiautomation.LMSSchemaValidation@1cbb87f3]" started-at="2022-02-22T12:17:39Z" name="validateSchema" finished-at="2022-02-22T12:17:39Z" duration-ms="462" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSchema -->
      </class> <!-- lmsapiautomation.LMSSchemaValidation -->
      <class name="lmsapiautomation.LMSPost">
        <test-method signature="postProgramPositiveCases(java.lang.String, java.util.HashMap, java.lang.Integer, java.lang.Integer)[pri:0, instance:lmsapiautomation.LMSPost@2b48a640]" started-at="2022-02-22T12:17:27Z" name="postProgramPositiveCases" data-provider="postPositiveProgramIds" finished-at="2022-02-22T12:17:28Z" duration-ms="770" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[POST ProgramId 0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{programDescription=Selenium Postman, programName=SDET, online=TRUE, programId=0}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postProgramPositiveCases -->
        <test-method signature="postProgramPositiveCases(java.lang.String, java.util.HashMap, java.lang.Integer, java.lang.Integer)[pri:0, instance:lmsapiautomation.LMSPost@2b48a640]" started-at="2022-02-22T12:17:28Z" name="postProgramPositiveCases" data-provider="postPositiveProgramIds" finished-at="2022-02-22T12:17:28Z" duration-ms="474" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[POST ProgramName Integer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{programDescription=Manual Testing, programName=1234, online=TRUE, programId=}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postProgramPositiveCases -->
        <test-method signature="postProgramPositiveCases(java.lang.String, java.util.HashMap, java.lang.Integer, java.lang.Integer)[pri:0, instance:lmsapiautomation.LMSPost@2b48a640]" started-at="2022-02-22T12:17:28Z" name="postProgramPositiveCases" data-provider="postPositiveProgramIds" finished-at="2022-02-22T12:17:28Z" duration-ms="427" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[POST ProgramDescription Blank]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{programDescription=, programName=Blank testing, online=FALSE, programId=}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postProgramPositiveCases -->
        <test-method signature="postProgramPositiveCases(java.lang.String, java.util.HashMap, java.lang.Integer, java.lang.Integer)[pri:0, instance:lmsapiautomation.LMSPost@2b48a640]" started-at="2022-02-22T12:17:28Z" name="postProgramPositiveCases" data-provider="postPositiveProgramIds" finished-at="2022-02-22T12:17:29Z" duration-ms="423" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[POST Online Field Blank]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{programDescription=RestAssured Postman, programName=API Testing, online=, programId=}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postProgramPositiveCases -->
        <test-method signature="postProgramPositiveCases(java.lang.String, java.util.HashMap, java.lang.Integer, java.lang.Integer)[pri:0, instance:lmsapiautomation.LMSPost@2b48a640]" started-at="2022-02-22T12:17:29Z" name="postProgramPositiveCases" data-provider="postPositiveProgramIds" finished-at="2022-02-22T12:17:29Z" duration-ms="429" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[POST Number in Online Field]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{programDescription=Selenium, programName=SDET, online=TRUE, programId=}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postProgramPositiveCases -->
        <test-method signature="postProgramPositiveCases(java.lang.String, java.util.HashMap, java.lang.Integer, java.lang.Integer)[pri:0, instance:lmsapiautomation.LMSPost@2b48a640]" started-at="2022-02-22T12:17:29Z" name="postProgramPositiveCases" data-provider="postPositiveProgramIds" finished-at="2022-02-22T12:17:30Z" duration-ms="414" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[POST ProgramId HugeNumber]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{programDescription=Selenium Postman, programName=API Testing, online=FALSE, programId=184467440737095008}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postProgramPositiveCases -->
        <test-method signature="postProgramNegativeCases(java.lang.String, java.util.HashMap, java.lang.Integer, java.lang.Integer)[pri:0, instance:lmsapiautomation.LMSPost@2b48a640]" started-at="2022-02-22T12:17:30Z" name="postProgramNegativeCases" data-provider="postNegativeProgramIds" finished-at="2022-02-22T12:17:31Z" duration-ms="384" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[POST Alpha Numeric ProgramId]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{programDescription=RestAssured Postman, programName=API Testing, online=TRUE, programId=abc123}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postProgramNegativeCases -->
        <test-method signature="postProgramNegativeCases(java.lang.String, java.util.HashMap, java.lang.Integer, java.lang.Integer)[pri:0, instance:lmsapiautomation.LMSPost@2b48a640]" started-at="2022-02-22T12:17:31Z" name="postProgramNegativeCases" data-provider="postNegativeProgramIds" finished-at="2022-02-22T12:17:31Z" duration-ms="446" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[POST Nonboolean in Online]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{programDescription=API Automation Testing, programName=SDET, online=Happy, programId=}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postProgramNegativeCases -->
        <test-method signature="postProgramNegativeCases(java.lang.String, java.util.HashMap, java.lang.Integer, java.lang.Integer)[pri:0, instance:lmsapiautomation.LMSPost@2b48a640]" started-at="2022-02-22T12:17:31Z" name="postProgramNegativeCases" data-provider="postNegativeProgramIds" finished-at="2022-02-22T12:17:31Z" duration-ms="467" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[POST No ProgramName]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{programDescription=Selenium Cucumber, programName=, online=TRUE, programId=}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[500]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postProgramNegativeCases -->
        <test-method signature="postProgramNegativeCases(java.lang.String, java.util.HashMap, java.lang.Integer, java.lang.Integer)[pri:0, instance:lmsapiautomation.LMSPost@2b48a640]" started-at="2022-02-22T12:17:31Z" name="postProgramNegativeCases" data-provider="postNegativeProgramIds" finished-at="2022-02-22T12:17:32Z" duration-ms="413" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Online Field blank]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{programDescription=Selenium Cucumber, programName=SDET, online=, programId=}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postProgramNegativeCases -->
      </class> <!-- lmsapiautomation.LMSPost -->
      <class name="lmsapiautomation.LMSGet">
        <test-method is-config="true" signature="BeforeTest()[pri:0, instance:lmsapiautomation.LMSGet@50ad3bc1]" started-at="2022-02-22T12:17:20Z" name="BeforeTest" finished-at="2022-02-22T12:17:21Z" duration-ms="429" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTest -->
        <test-method signature="getRequestPositive(java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer)[pri:0, instance:lmsapiautomation.LMSGet@50ad3bc1]" started-at="2022-02-22T12:17:22Z" name="getRequestPositive" data-provider="getPositiveProgramIds" finished-at="2022-02-22T12:17:23Z" duration-ms="1544" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Get All]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestPositive -->
        <test-method signature="getRequestPositive(java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer)[pri:0, instance:lmsapiautomation.LMSGet@50ad3bc1]" started-at="2022-02-22T12:17:23Z" name="getRequestPositive" data-provider="getPositiveProgramIds" finished-at="2022-02-22T12:17:24Z" duration-ms="464" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Get Existing ProgramId]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1153]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestPositive -->
        <test-method signature="getRequestPositive(java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer)[pri:0, instance:lmsapiautomation.LMSGet@50ad3bc1]" started-at="2022-02-22T12:17:24Z" name="getRequestPositive" data-provider="getPositiveProgramIds" finished-at="2022-02-22T12:17:24Z" duration-ms="484" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Get ProgramId 0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestPositive -->
        <test-method signature="getRequestPositive(java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer)[pri:0, instance:lmsapiautomation.LMSGet@50ad3bc1]" started-at="2022-02-22T12:17:24Z" name="getRequestPositive" data-provider="getPositiveProgramIds" finished-at="2022-02-22T12:17:25Z" duration-ms="478" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Non Existing ProgramId]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10500]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestPositive -->
        <test-method signature="getRequestNegative(java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer)[pri:0, instance:lmsapiautomation.LMSGet@50ad3bc1]" started-at="2022-02-22T12:17:25Z" name="getRequestNegative" data-provider="getNegativeProgramIds" finished-at="2022-02-22T12:17:25Z" duration-ms="382" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[GET AlphaNumeric ProgramId]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abc115]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestNegative -->
        <test-method signature="getRequestNegative(java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer)[pri:0, instance:lmsapiautomation.LMSGet@50ad3bc1]" started-at="2022-02-22T12:17:25Z" name="getRequestNegative" data-provider="getNegativeProgramIds" finished-at="2022-02-22T12:17:26Z" duration-ms="551" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[GET IncorrectURL : "https://lms-admin-rest-service.herokuapp.com/program"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestNegative -->
        <test-method signature="getRequestNegative(java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer)[pri:0, instance:lmsapiautomation.LMSGet@50ad3bc1]" started-at="2022-02-22T12:17:26Z" name="getRequestNegative" data-provider="getNegativeProgramIds" finished-at="2022-02-22T12:17:26Z" duration-ms="348" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[GET Without Authorization]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[401]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestNegative -->
      </class> <!-- lmsapiautomation.LMSGet -->
    </test> <!-- PostProduction LMS API Automation -->
    <test started-at="2022-02-22T17:17:39Z" name="PostProduction Jobs API Automation" finished-at="2022-02-22T17:17:46Z" duration-ms="6865">
      <class name="jobsapiautomation.JobsGet">
        <test-method is-config="true" signature="BeforeTest()[pri:0, instance:jobsapiautomation.JobsGet@4d0f2471]" started-at="2022-02-22T12:17:39Z" name="BeforeTest" finished-at="2022-02-22T12:17:39Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTest -->
        <test-method signature="getRequestPositive(java.lang.String, java.lang.Integer, java.lang.Integer)[pri:0, instance:jobsapiautomation.JobsGet@4d0f2471]" started-at="2022-02-22T12:17:39Z" name="getRequestPositive" data-provider="getPositiveProgramIds" finished-at="2022-02-22T12:17:39Z" duration-ms="214" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[GetAll]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestPositive -->
        <test-method signature="getRequestNegative(java.lang.String, java.lang.Integer, java.lang.Integer)[pri:0, instance:jobsapiautomation.JobsGet@4d0f2471]" started-at="2022-02-22T12:17:40Z" name="getRequestNegative" data-provider="getNegativeProgramIds" finished-at="2022-02-22T12:17:40Z" duration-ms="232" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Get IncorrectURL: "https://jobs123.herokuapp.com/Job"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestNegative -->
      </class> <!-- jobsapiautomation.JobsGet -->
      <class name="jobsapiautomation.JobsPost">
        <test-method signature="postProgramPositiveCases(java.lang.String, java.util.HashMap, java.lang.Integer, java.lang.Integer)[pri:0, instance:jobsapiautomation.JobsPost@5562c41e]" started-at="2022-02-22T12:17:40Z" name="postProgramPositiveCases" data-provider="postPositiveProgramIds" finished-at="2022-02-22T12:17:40Z" duration-ms="272" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[New JobId with all assigned values]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{Job Location=Texas, Job Id=4143, Job Company Name=Macys, Job Posted time=20 mins, Job Description=API Automation, Job Title=SDET, Job Type=Full Time}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postProgramPositiveCases -->
        <test-method signature="postProgramPositiveCases(java.lang.String, java.util.HashMap, java.lang.Integer, java.lang.Integer)[pri:0, instance:jobsapiautomation.JobsPost@5562c41e]" started-at="2022-02-22T12:17:40Z" name="postProgramPositiveCases" data-provider="postPositiveProgramIds" finished-at="2022-02-22T12:17:41Z" duration-ms="294" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Create a newJob with alphanumeric JobId]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{Job Location=NewYork, Job Id=20GE, Job Company Name=Wipro, Job Posted time=4 hrs, Job Description=Testing, Job Title=SDET, Job Type=Contract, Third Party}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postProgramPositiveCases -->
        <test-method signature="postProgramPositiveCases(java.lang.String, java.util.HashMap, java.lang.Integer, java.lang.Integer)[pri:0, instance:jobsapiautomation.JobsPost@5562c41e]" started-at="2022-02-22T12:17:41Z" name="postProgramPositiveCases" data-provider="postPositiveProgramIds" finished-at="2022-02-22T12:17:41Z" duration-ms="272" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[New JobId with alphaNumeric JobTitle]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{Job Location=NewJersey, Job Id=2014, Job Company Name=AT&T, Job Posted time=45 mins, Job Description=RestAssured Postman, Job Title=Testing-05, Job Type=Full Time}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postProgramPositiveCases -->
        <test-method signature="postProgramNegativeCases(java.lang.String, java.util.HashMap, java.lang.Integer, java.lang.Integer)[pri:0, instance:jobsapiautomation.JobsPost@5562c41e]" started-at="2022-02-22T12:17:42Z" name="postProgramNegativeCases" data-provider="postNegativeProgramIds" finished-at="2022-02-22T12:17:42Z" duration-ms="207" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Create with Existing JobId]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{Job Location=Atlanta, Job Id=1018, Job Company Name=Connected Cars, Job Posted time=15 mins, Job Description=Selenium Postman, Job Title=SDET, Job Type=Contract}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[409]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postProgramNegativeCases -->
        <test-method signature="postProgramNegativeCases(java.lang.String, java.util.HashMap, java.lang.Integer, java.lang.Integer)[pri:0, instance:jobsapiautomation.JobsPost@5562c41e]" started-at="2022-02-22T12:17:42Z" name="postProgramNegativeCases" data-provider="postNegativeProgramIds" finished-at="2022-02-22T12:17:42Z" duration-ms="258" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Create a new Job without Job Location]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{Job Id=1600, Job Company Name=CTS, Job Posted time=5 mins, Job Description=API Testing with Postman, Job Title=API Testing, Job Type=Full Time}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postProgramNegativeCases -->
        <test-method signature="postProgramNegativeCases(java.lang.String, java.util.HashMap, java.lang.Integer, java.lang.Integer)[pri:0, instance:jobsapiautomation.JobsPost@5562c41e]" started-at="2022-02-22T12:17:42Z" name="postProgramNegativeCases" data-provider="postNegativeProgramIds" finished-at="2022-02-22T12:17:42Z" duration-ms="253" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Create a new Job without Job CompanyName]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{Job Location=California, Job Id=1600, Job Posted time=5 mins, Job Description=API Testing with Postman, Job Title=API Testing, Job Type=Contract}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postProgramNegativeCases -->
        <test-method signature="postProgramNegativeCases(java.lang.String, java.util.HashMap, java.lang.Integer, java.lang.Integer)[pri:0, instance:jobsapiautomation.JobsPost@5562c41e]" started-at="2022-02-22T12:17:42Z" name="postProgramNegativeCases" data-provider="postNegativeProgramIds" finished-at="2022-02-22T12:17:43Z" duration-ms="259" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Create a new Job without Job Type]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{Job Location=Wisconsin, Job Id=1500, Job Company Name=Cox, Job Posted time=10 mins, Job Description=Automation Testing, Job Title=SDET}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postProgramNegativeCases -->
        <test-method signature="postProgramNegativeCases(java.lang.String, java.util.HashMap, java.lang.Integer, java.lang.Integer)[pri:0, instance:jobsapiautomation.JobsPost@5562c41e]" started-at="2022-02-22T12:17:43Z" name="postProgramNegativeCases" data-provider="postNegativeProgramIds" finished-at="2022-02-22T12:17:43Z" duration-ms="262" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Create a new Job without Job Posted time]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{Job Location=Canada, Job Id=1500, Job Company Name=Facebook, Job Description=API Testing with Postman, Job Title=API Testing, Job Type=Full Time}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postProgramNegativeCases -->
        <test-method signature="postProgramNegativeCases(java.lang.String, java.util.HashMap, java.lang.Integer, java.lang.Integer)[pri:0, instance:jobsapiautomation.JobsPost@5562c41e]" started-at="2022-02-22T12:17:43Z" name="postProgramNegativeCases" data-provider="postNegativeProgramIds" finished-at="2022-02-22T12:17:43Z" duration-ms="272" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Create a new Job without Job Id]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{Job Location=Wisconsin, Job Company Name=Cox, Job Posted time=10 mins, Job Description=Automation Testing, Job Title=SDET, Job Type=Contract}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postProgramNegativeCases -->
        <test-method signature="postProgramNegativeCases(java.lang.String, java.util.HashMap, java.lang.Integer, java.lang.Integer)[pri:0, instance:jobsapiautomation.JobsPost@5562c41e]" started-at="2022-02-22T12:17:43Z" name="postProgramNegativeCases" data-provider="postNegativeProgramIds" finished-at="2022-02-22T12:17:43Z" duration-ms="274" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Create a new Job without Job Title]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{Job Location=NewYork, Job Id=4000, Job Company Name=Wipro, Job Posted time=4 hrs, Job Description=API Developer, Job Type=Contract, Third Party}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postProgramNegativeCases -->
      </class> <!-- jobsapiautomation.JobsPost -->
      <class name="jobsapiautomation.JobsPut">
        <test-method signature="putPositiveCases(java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer)[pri:0, instance:jobsapiautomation.JobsPut@32ee6fee]" started-at="2022-02-22T12:17:44Z" name="putPositiveCases" data-provider="putPositiveProgramIds" finished-at="2022-02-22T12:17:44Z" duration-ms="218" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Update existing JobId]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1005]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Updating JobTitle for 1005- SDET]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- putPositiveCases -->
        <test-method signature="putPositiveCases(java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer)[pri:0, instance:jobsapiautomation.JobsPut@32ee6fee]" started-at="2022-02-22T12:17:44Z" name="putPositiveCases" data-provider="putPositiveProgramIds" finished-at="2022-02-22T12:17:44Z" duration-ms="255" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Update existing JobId]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1010]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[SDET-Updating 1010 ]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- putPositiveCases -->
        <test-method signature="putNegativeCases(java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer)[pri:0, instance:jobsapiautomation.JobsPut@32ee6fee]" started-at="2022-02-22T12:17:44Z" name="putNegativeCases" data-provider="putNegativeProgramIds" finished-at="2022-02-22T12:17:44Z" duration-ms="255" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Update non existing JobId]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4103]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[SDET]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- putNegativeCases -->
        <test-method signature="putNegativeCases(java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer)[pri:0, instance:jobsapiautomation.JobsPut@32ee6fee]" started-at="2022-02-22T12:17:44Z" name="putNegativeCases" data-provider="putNegativeProgramIds" finished-at="2022-02-22T12:17:45Z" duration-ms="284" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[JobId is null]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[SDET]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- putNegativeCases -->
      </class> <!-- jobsapiautomation.JobsPut -->
      <class name="jobsapiautomation.JobsDelete">
        <test-method signature="deletePositiveCases(java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer)[pri:0, instance:jobsapiautomation.JobsDelete@53fdffa1]" started-at="2022-02-22T12:17:45Z" name="deletePositiveCases" data-provider="deletePositiveProgramIds" finished-at="2022-02-22T12:17:45Z" duration-ms="234" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Delete existing JobId]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: a value equal to <200>
     got: <404>
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: a value equal to <200>
     got: <404>

	at org.junit.Assert.assertThat(Assert.java:780)
	at org.junit.Assert.assertThat(Assert.java:738)
	at jobsapiautomation.JobsDelete.deletePositiveCases(JobsDelete.java:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deletePositiveCases -->
        <test-method signature="deletePositiveCases(java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer)[pri:0, instance:jobsapiautomation.JobsDelete@53fdffa1]" started-at="2022-02-22T12:17:45Z" name="deletePositiveCases" data-provider="deletePositiveProgramIds" finished-at="2022-02-22T12:17:45Z" duration-ms="248" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Delete existing JobId]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: a value equal to <200>
     got: <404>
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: a value equal to <200>
     got: <404>

	at org.junit.Assert.assertThat(Assert.java:780)
	at org.junit.Assert.assertThat(Assert.java:738)
	at jobsapiautomation.JobsDelete.deletePositiveCases(JobsDelete.java:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deletePositiveCases -->
        <test-method signature="deleteProgramNegativeCases(java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer)[pri:0, instance:jobsapiautomation.JobsDelete@53fdffa1]" started-at="2022-02-22T12:17:45Z" name="deleteProgramNegativeCases" data-provider="deleteNegativeProgramIds" finished-at="2022-02-22T12:17:46Z" duration-ms="209" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Delete non existing JobId]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1050]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteProgramNegativeCases -->
        <test-method signature="deleteProgramNegativeCases(java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer)[pri:0, instance:jobsapiautomation.JobsDelete@53fdffa1]" started-at="2022-02-22T12:17:46Z" name="deleteProgramNegativeCases" data-provider="deleteNegativeProgramIds" finished-at="2022-02-22T12:17:46Z" duration-ms="275" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Delete non existing JobId]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["20FT"]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteProgramNegativeCases -->
      </class> <!-- jobsapiautomation.JobsDelete -->
      <class name="lmsapiautomation.LMSGet">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:lmsapiautomation.LMSGet@50ad3bc1]" started-at="2022-02-22T12:17:20Z" name="beforeSuite" finished-at="2022-02-22T12:17:20Z" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
      </class> <!-- lmsapiautomation.LMSGet -->
    </test> <!-- PostProduction Jobs API Automation -->
  </suite> <!-- Suite1 -->
</testng-results>
